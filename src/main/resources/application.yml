# 공통 설정
jwt:
  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
  header: Authorization
  token-validity-in-seconds: 86400
--- #local
spring:
  config:
    activate:
      on-profile: local
#  jpa:
#    hibernate:
#      ddl-auto: create-drop  # option type: create, create-drop, update, validate, none
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect  # 쿼리의 기준이 되는 데이터베이스 엔진을 설정합니다.
#        show_sql: true  # sql 쿼리를 보여줍니다.
#        format_sql: true  # sql query formatting
#        use_sql_comments: true  # sql 쿼리의 추가정보를 보여줍니다.
#
##  data:
##    redis:
##      vote:
##        host: localhost
##        port: 6379
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://beside.cykarvkk14c5.ap-northeast-2.rds.amazonaws.com:3306/beside
#    username: admin
#    password: beside12!

  h2:
    console:
      enabled: true
      path: /h2-console

    datasource:
      url: jdbc:h2:tcp://localhost/~/jpashop;NON_KEYWORDS=USER # test 부분을 자신이 원하는 것으로 바꾸시면 됩니다.
      username: sa # username과 password는 자신의 설정에 맞게
      password:
      driver-class-name: org.h2.Driver

    jpa:
      hibernate:
        ddl-auto: create-drop # 어플리케이션을 시작할 때 데이터베이스를 초기화하고 다시 테이블 생성
      properties:
        hibernate:
          format_sql: true # 실행되는 query를 보여줌

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace  # query의 ?에 어떤 값이 들어가는지 추적할 수 있는 설정입니다. TRACE Log에 값을 보여줍니다.